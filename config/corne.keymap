/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                        if-layers = <1 2>;
                        then-layer = <3>;
                };
        };

        macros {
                tile_up: tile_up {
                        label = "TILE_UP";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                            = <&macro_press &kp LCTRL &kp LALT>
                            , <&kp UP>
                            , <&macro_release &kp LCTRL &kp LALT>
                            ;
                };
                tile_left: tile_left {
                        label = "TILE_LEFT";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                            = <&macro_press &kp LCTRL &kp LALT>
                            , <&kp LEFT>
                            , <&macro_release &kp LCTRL &kp LALT>
                            ;
                };
                tile_down: tile_down {
                        label = "TILE_DOWN";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                            = <&macro_press &kp LCTRL &kp LALT>
                            , <&kp DOWN>
                            , <&macro_release &kp LCTRL &kp LALT>
                            ;
                };
                tile_right: tile_right {
                        label = "TILE_RIGHT";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                            = <&macro_press &kp LCTRL &kp LALT>
                            , <&kp RIGHT>
                            , <&macro_release &kp LCTRL &kp LALT>
                            ;
                };
                tile_full: tile_full {
                        label = "TILE_FULL";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                            = <&macro_press &kp LCTRL &kp LALT>
                            , <&kp ENTER>
                            , <&macro_release &kp LCTRL &kp LALT>
                            ;
                };
                go_left: go_left {
                        label = "GO_LEFT";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                            = <&macro_press &kp LALT &kp LGUI>
                            , <&kp LEFT>
                            , <&macro_release &kp LALT &kp LGUI>
                            ;
                };
                go_right: go_right {
                        label = "GO_RIGHT";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                            = <&macro_press &kp LALT &kp LGUI>
                            , <&kp RIGHT>
                            , <&macro_release &kp LALT &kp LGUI>
                            ;
                };
                mv_left: mv_left {
                        label = "MV_LEFT";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                            = <&macro_press &kp LCTRL &kp LSHFT>
                            , <&kp PG_UP>
                            , <&macro_release &kp LCTRL &kp LSHFT>
                            ;
                };
                mv_right: mv_right {
                        label = "MV_RIGHT";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                            = <&macro_press &kp LCTRL &kp LSHFT>
                            , <&kp PG_DN>
                            , <&macro_release &kp LCTRL &kp LSHFT>
                            ;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "Base";
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp RCTL
   &kp ESC   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ENTER
                  &mo 1 &kp LGUI &kp SPACE   &kp BSPC &mo 2 &kp RALT
                        >;
                };

                lower_layer {
                        label = "Lower";
                        bindings = <
   &kp TAB    &kp F1       &kp F2       &kp F3       &kp F4       &kp F5         &kp F6   &kp F7    &kp F8      &kp F9      &kp F10     &kp RCTL
   &kp ESC    &kp KP_N1    &kp KP_N2    &kp KP_N3    &kp KP_N4    &kp KP_N5      &kp LEFT &kp DOWN  &kp UP      &kp RIGHT   &kp KP_DOT  &kp DEL
   &kp LSHFT  &kp KP_N6    &kp KP_N7    &kp KP_N8    &kp KP_N9    &kp KP_N0      &kp C_PREV   &kp C_VOL_UP    &kp C_VOL_DN  &kp C_NEXT  &kp C_PP    &kp ENTER
                          	        &trans     &kp LGUI       &kp SPACE      &kp BSPC  &trans    &kp RALT
                        >;
                };

                raise_layer {
                        label = "Raise";
                        bindings = <
   &kp TAB    &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp RCTL
   &kp ESC    &kp KP_N1    &kp KP_N2    &kp KP_N3    &kp KP_N4    &kp KP_N5      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT  &kp KP_N6    &kp KP_N7    &kp KP_N8    &kp KP_N9    &kp KP_N0      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp ENTER
                    	     &trans  &kp LGUI   &kp SPACE   &kp BSPC   &trans    &kp RALT
                        >;
                };

                combo_layer {
                        label = "Combo";
                        bindings = <
   &none      &kp KP_NLCK  &none  &none      &none     &none     &none  &none         &none         &none       &none       &kp RCTL
   &none      &none        &none  &kp PG_UP  &kp HOME  &none     &none  &go_left      &go_right     &none       &tile_up    &tile_full
   &kp LSHFT  &none        &none  &kp PG_DN  &kp END   &none     &none  &mv_right  &mv_left   &tile_left  &tile_down  &tile_right
                    	     &trans  &kp LGUI   &kp SPACE   &kp BSPC   &trans  &kp RALT
                        >;
                };
        };
};
